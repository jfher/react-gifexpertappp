{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","defaultProps","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,aA2B/BZ,EAAYe,aAAe,CACvBd,cAAe,I,mCCnCNe,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGII,MAAMF,GAHV,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV3B,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECHwB,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAGtB,CAACpB,IAEGqB,EDd0BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GACP,OAAO,cAAC,EAAD,eAECA,GADEA,EAAIC,aEZzBgB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,gBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OAAO,qCACK,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBACA,6BAEQ4C,EAAWnB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEGA,SAAWA,GADLA,Y,MChBtC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5f2ee7f2.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => { // puede ser props y luego props.setCategories o directo {setCategories}\r\n\r\n    const [inputValue, setInputValue] = useState(''); //siempre pasar un estado inicial\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value); //necesario para atrapar todo cambio en el input\r\n    }\r\n   \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();  //previene el refresh al enviar el form\r\n        if(inputValue.trim().length > 2 ) {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}> \r\n            <input\r\n                type = 'text'\r\n                value = {inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n//Definir props por defecto\r\nAddCategory.defaultProps = {\r\n    setCategories: ''\r\n}\r\n","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=gyaW7LNewwZzbcC4upvErADYRU7fAHMo`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n    return gifs;\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  \r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => {\r\n                        return <GifGridItem \r\n                            key= {img.id}\r\n                            {...img}\r\n                        />\r\n                    })\r\n                } \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(()=> {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [category])\r\n\r\n    return state; //{data: [],loading: true}\r\n}\r\n","\r\nimport React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    /*const handleAdd = () => {\r\n        setCategories([...categories,'Sailor Moon']);//similar a arr.push\r\n    }*/\r\n\r\n    return <>\r\n                <h2>GifExpertApp</h2>\r\n                <AddCategory setCategories = {setCategories}/>\r\n                <hr></hr>\r\n                <ol>\r\n                    {\r\n                        categories.map( category => (\r\n                             <GifGrid \r\n                                key= {category}\r\n                                category= {category}\r\n                            />\r\n                        ))\r\n                    }\r\n                </ol>\r\n           </>\r\n} \r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}