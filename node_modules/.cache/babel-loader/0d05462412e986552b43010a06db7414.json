{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Ferch/Desktop/React/gif-expert-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Ferch/Desktop/React/gif-expert-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";export var getGifs=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(category){var url,resp,_yield$resp$json,data,gifs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:url=\"https://api.giphy.com/v1/gifs/search?q=\".concat(encodeURI(category),\"&limit=10&api_key=gyaW7LNewwZzbcC4upvErADYRU7fAHMo\");_context.next=3;return fetch(url);case 3:resp=_context.sent;_context.next=6;return resp.json();case 6:_yield$resp$json=_context.sent;data=_yield$resp$json.data;gifs=data.map(function(img){var _img$images;return{id:img.id,title:img.title,url:(_img$images=img.images)===null||_img$images===void 0?void 0:_img$images.downsized_medium.url};});return _context.abrupt(\"return\",gifs);case 10:case\"end\":return _context.stop();}}},_callee);}));return function getGifs(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Users/Ferch/Desktop/React/gif-expert-app/src/helpers/getGifs.js"],"names":["getGifs","category","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium"],"mappings":"iUAAA,MAAO,IAAMA,CAAAA,OAAO,0FAAG,iBAAMC,QAAN,0JAEbC,GAFa,kDAEmCC,SAAS,CAACF,QAAD,CAF5C,6EAGIG,CAAAA,KAAK,CAACF,GAAD,CAHT,QAGTG,IAHS,qCAIMA,CAAAA,IAAI,CAACC,IAAL,EAJN,uCAIRC,IAJQ,kBAIRA,IAJQ,CAMTC,IANS,CAMFD,IAAI,CAACE,GAAL,CAAS,SAAAC,GAAG,CAAI,iBACzB,MAAO,CACHC,EAAE,CAAED,GAAG,CAACC,EADL,CAEHC,KAAK,CAAEF,GAAG,CAACE,KAFR,CAGHV,GAAG,cAAEQ,GAAG,CAACG,MAAN,sCAAE,YAAYC,gBAAZ,CAA6BZ,GAH/B,CAAP,CAKH,CANY,CANE,iCAaZM,IAbY,yDAAH,kBAAPR,CAAAA,OAAO,4CAAb","sourcesContent":["export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=gyaW7LNewwZzbcC4upvErADYRU7fAHMo`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n    return gifs;\r\n};"]},"metadata":{},"sourceType":"module"}