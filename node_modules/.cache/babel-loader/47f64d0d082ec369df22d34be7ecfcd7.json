{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Ferch/Desktop/React/gif-expert-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/Ferch/Desktop/React/gif-expert-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export var AddCategory=function AddCategory(_ref){var setCategories=_ref.setCategories;// puede ser props y luego props.setCategories o directo {setCategories}\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),inputValue=_useState2[0],setInputValue=_useState2[1];//siempre pasar un estado inicial\nvar handleInputChange=function handleInputChange(e){setInputValue(e.target.value);//necesario para atrapar todo cambio en el input\n};var handleSubmit=function handleSubmit(e){e.preventDefault();//previene el refresh al enviar el form\nif(inputValue.trim().length>2){setCategories(function(cats){return[inputValue].concat(_toConsumableArray(cats));});setInputValue('');}};return/*#__PURE__*/_jsx(\"form\",{onSubmit:handleSubmit,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputValue,onChange:handleInputChange})});};//Definir props por defecto\nAddCategory.defaultProps={setCategories:''};","map":{"version":3,"sources":["C:/Users/Ferch/Desktop/React/gif-expert-app/src/components/AddCategory.js"],"names":["React","useState","AddCategory","setCategories","inputValue","setInputValue","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","length","cats","defaultProps"],"mappings":"4UAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,KAA6B,OAA7B,C,2CAGA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAqB,IAAnBC,CAAAA,aAAmB,MAAnBA,aAAmB,CAAE;AAE9C,cAAoCF,QAAQ,CAAC,EAAD,CAA5C,wCAAOG,UAAP,eAAmBC,aAAnB,eAAkD;AAClD,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,CAAD,CAAO,CAC7BF,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,CAA+B;AAClC,CAFD,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACH,CAAD,CAAO,CACxBA,CAAC,CAACI,cAAF,GAAqB;AACrB,GAAGP,UAAU,CAACQ,IAAX,GAAkBC,MAAlB,CAA2B,CAA9B,CAAkC,CAC9BV,aAAa,CAAC,SAAAW,IAAI,SAAKV,UAAL,4BAAmBU,IAAnB,IAAL,CAAb,CACAT,aAAa,CAAC,EAAD,CAAb,CACH,CACJ,CAND,CAQA,mBACI,aAAM,QAAQ,CAAEK,YAAhB,uBACI,cACI,IAAI,CAAG,MADX,CAEI,KAAK,CAAIN,UAFb,CAGI,QAAQ,CAAEE,iBAHd,EADJ,EADJ,CASH,CAxBM,CA8BP;AACAJ,WAAW,CAACa,YAAZ,CAA2B,CACvBZ,aAAa,CAAE,EADQ,CAA3B","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => { // puede ser props y luego props.setCategories o directo {setCategories}\r\n\r\n    const [inputValue, setInputValue] = useState(''); //siempre pasar un estado inicial\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value); //necesario para atrapar todo cambio en el input\r\n    }\r\n   \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();  //previene el refresh al enviar el form\r\n        if(inputValue.trim().length > 2 ) {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}> \r\n            <input\r\n                type = 'text'\r\n                value = {inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n//Definir props por defecto\r\nAddCategory.defaultProps = {\r\n    setCategories: ''\r\n}\r\n"]},"metadata":{},"sourceType":"module"}